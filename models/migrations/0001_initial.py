# Generated by Django 2.2.2 on 2019-09-15 11:25

import colorfield.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppAuthData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_kit_id', models.CharField(max_length=25, unique=True)),
                ('phone_number', models.CharField(max_length=25, unique=True)),
            ],
            options={
                'db_table': 'app_auth_data',
            },
        ),
        migrations.CreateModel(
            name='catch_email_temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'catch_email_temp',
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_on', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'notification_type',
            },
        ),
        migrations.CreateModel(
            name='Organiser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('role', models.CharField(max_length=128)),
                ('company', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=16)),
                ('organiserEmail', models.EmailField(max_length=254)),
            ],
            options={
                'db_table': 'organiser',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'subscription_type',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('logo', models.ImageField(upload_to='team_logo')),
                ('owner', models.CharField(max_length=128)),
                ('manager', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('intro', models.TextField()),
                ('tournament_detail_image', models.ImageField(blank=True, upload_to='tournament_image')),
                ('color', colorfield.fields.ColorField(default='#FF0000', max_length=18)),
                ('cnt_match', models.IntegerField(default=0)),
                ('start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('end_date', models.DateTimeField(default=datetime.datetime.now)),
                ('venue', models.CharField(default='', max_length=256)),
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Organiser')),
            ],
            options={
                'db_table': 'tournament',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('email', models.CharField(max_length=65, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('email_token', models.CharField(default='9ethYiwVWrW2X6DOZSclbHCbLp45B1Ev', max_length=32)),
                ('token_expiry', models.DateTimeField(default=datetime.datetime(2019, 9, 15, 11, 25, 36, 564383, tzinfo=utc))),
                ('date_of_birth', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('app_auth_data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.AppAuthData')),
                ('subscription_type_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='models.SubscriptionType')),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_auth_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.AppAuthData')),
                ('notification_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.NotificationType')),
            ],
            options={
                'db_table': 'user_notification_type',
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=30)),
                ('device_name', models.CharField(max_length=30)),
                ('date_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.UserInfo')),
            ],
            options={
                'db_table': 'user_log',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('position', models.CharField(max_length=64)),
                ('jersey_number', models.CharField(max_length=16)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Team')),
            ],
            options={
                'db_table': 'player',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=10)),
                ('transaction_id', models.CharField(max_length=100)),
                ('transaction_status', models.BooleanField(default=False)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.UserInfo')),
            ],
            options={
                'db_table': 'order_details',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=datetime.datetime.now)),
                ('end_time', models.DateTimeField(default=datetime.datetime.now)),
                ('image', models.ImageField(upload_to='match_images')),
                ('home_score', models.CharField(blank=True, max_length=4, null=True)),
                ('away_score', models.CharField(blank=True, max_length=4, null=True)),
                ('boxcastLink', models.CharField(blank=True, max_length=10000, null=True)),
                ('team_away', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_away', to='models.Team')),
                ('team_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_home', to='models.Team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='models.Tournament')),
                ('winner', models.ForeignKey(default='Not Declared', on_delete=django.db.models.deletion.CASCADE, related_name='team_winner', to='models.Team')),
            ],
            options={
                'db_table': 'match',
            },
        ),
        migrations.CreateModel(
            name='TournamentTeamRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Tournament')),
            ],
            options={
                'db_table': 'tournament_team_relationship',
                'unique_together': {('tournament', 'team')},
            },
        ),
    ]
